<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlxd.microcloud.dao.AnalysisMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hlxd.microcloud.vo.ScanCount">
        <id column="machine_code" property="machineName" />
        <result column="realtime_reject" property="realtimeReject" />
        <result column="realtime_relate" property="realtimeRelate" />
        <result column="realtime_scan_reject" property="realtimeScanReject" />
        <result column="realtime_scan" property="realtimeScan" />
        <result column="brand_id" property="brandName" />
        <result column="last_time" property="lastTime" />
        <result column="shift_id" property="period" />
        <result column="random_check" property="randomCheck" />
        <result column="random_check_fail" property="randomCheckFail" />
        <result column="relate_time_break_count" property="relateTimeBreakCount" />
        <result column="relate_time_break_time" property="relateTimeBreakTime" />
        <result column="type_code" property="typeCode" />
        <result column="relateCount" property="relateCount" />
        <result column="relateReject" property="relateReject" />
        <result column="realtime_collection_package" property="collectionCountPackage" />
        <result column="realtime_collection_strip" property="collectionCountStrip" />
        <result column="workEfficiency" property="workEfficiency" />
        <result column="scanEfficiency" property="scanEfficiency" />
        <collection property="rejectCounts" ofType="com.hlxd.microcloud.vo.RejectCount">
            <result column="rejectCount" property="countRemark"/>
            <result column="reject_type_code" property="rejectType"/>
        </collection>
        <collection property="breakRecords" ofType="com.hlxd.microcloud.vo.BreakRecord">
            <result column="break_time_count" property="breakTimeOut"/>
            <result column="break_count" property="breakCount"/>
            <result column="begin_date" property="beginDate"/>
            <result column="end_date" property="endDate"/>
        </collection>
        <collection property="randomCheckRecords" ofType="com.hlxd.microcloud.vo.RandomCheckRecord">
            <result column="begin_check_date" property="beginCheckDate"/>
            <result column="check_type" property="checkType"/>
            <result column="quality_type" property="qualityType"/>
            <result column="qr_code" property="qrCode"/>
            <result column="check_status" property="checkStatus"/>
            <result column="on_line_check" property="onLineCheck"/>
            <collection property="randomCheckDetails" ofType="com.hlxd.microcloud.vo.RandomCheckDetails">
                <result column="check_qrCode" property="qrCode"/>
            </collection>
        </collection>
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseMachineMap" type="com.hlxd.microcloud.vo.Machine">
        <result column="machine_code" property="machineCode" />
        <result column="type" property="type" />
        <result column="sys_status" property="status" />
    </resultMap>

    <select id="getMachineStatus" resultMap="BaseMachineMap" parameterType="java.util.HashMap">
        select
thbm.machine_code,
(case
when (select count(*) from t_hl_realtime_work where thbm.machine_code = machine_code)>0 and TIMESTAMPDIFF(MINUTE,thrw.last_time,now()) > 2 then 0
else thrw.sys_status
end
) as sys_status
        from
        t_hl_base_machine thbm
        left join t_hl_realtime_work thrw
        on thrw.machine_code = thbm.machine_code  and DATE_FORMAT(thrw.last_time,'%Y-%m-%d') = DATE_FORMAT(now(),'%Y-%m-%d')
        where thbm.status = 1
        and thbm.group_code = #{typeCode}
    </select>


    <select id="getCountStatic" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select sum(realtime_relate) as relateCount,sum(realtime_reject) as relateReject,sum(realtime_collection_package) as realtime_collection_package,sum(realtime_collection_strip) as realtime_collection_strip,sum(relate_time_break_time) as relate_time_break_time,
(1-sum(relate_time_break_time/TIMESTAMPDIFF(MINUTE,STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s'),thrw.last_time))/count(*)) as workEfficiency,
sum(realtime_scan/(realtime_scan+realtime_scan_reject))/count(*) as scanEfficiency,
last_time,type_code
    from  t_hl_realtime_work thrw
		left join t_hl_system_shift_details thssd
		on thssd.id = thrw.shift_id
    where type_code = #{typeCode}
    and last_time <![CDATA[>=]]>str_to_date(#{beginDate},'%Y-%m-%d')
    AND last_time <![CDATA[<=]]> str_to_date(#{endDate},'%Y-%m-%d')
    group by last_time,type_code

    </select>
    <select id="getScanCount" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select
        reject.rejectCount,
        thrw.*,
        reject.reject_type_code,
        thtb.break_time_count,
        thtb.break_count,
        thrck.begin_check_date,
        thrck.check_type_code,
        thrck.quality_type_code,
        thrck.qr_code,
        thrck.check_status,
        thrcd.qr_code as check_qrCode
        from
        t_hl_realtime_work thrw
        left join
        (select count(*) as rejectCount,reject_type_code,machine_code,reject_date,type_code,shift_id
        from t_hl_reject_details
        group by machine_code,reject_type_code,reject_date,type_code,shift_id) as reject
        on reject.machine_code = thrw.machine_Code and reject.type_code = thrw.type_code and reject.shift_id = thrw.shift_id and reject.reject_date = DATE_FORMAT(thrw.last_time,'%Y-%m-%d')
        left join
        (select SUM(break_time_count) as break_time_count,count(*) as break_count,break_date,shift_id,machine_code
        from t_hl_time_break
        group by break_date,shift_id,machine_code) as thtb
        on thtb.machine_code = thrw.machine_code  and thtb.shift_id = thrw.shift_id and thtb.break_date = DATE_FORMAT(thrw.last_time,'%Y-%m-%d')
        left join
        t_hl_system_shift_details thssd
        on thrw.shift_id = thssd.id
        left join
        t_hl_random_check thrck
        on  thrck.begin_check_date between STR_TO_DATE(CONCAT(DATE_FORMAT(thrw.last_time,'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') and STR_TO_DATE(CONCAT(DATE_FORMAT(thrw.last_time,'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s') and thrck.machine_code = thrw.machine_code
        left join t_hl_random_check_detail thrcd
        on thrcd.random_check_id = thrck.id
        left join t_hl_base_machine thbm
        on thbm.machine_code = thbm.machine_code
        where 1=1
        <if test="null != lastTime and '' != lastTime">
            and thrw.shift_id = (select thssd1.id from t_hl_system_shift thsf1
            left join t_hl_system_shift_details thssd1
            on thsf1.id = thssd1.shift_id
            where thsf1.id = thbm.shift_id
            and thrw.last_time between  str_to_date(CONCAT(#{lastTime},' ',thssd1.begin_date),'%Y-%m-%d %H:%i:%s') and str_to_date(CONCAT(#{lastTime},' ',thssd1.end_date),'%Y-%m-%d %H:%i:%s')
            )
        </if>
        <if test="null != machineCode and '' != machineCode">
        and thrw.machine_code = #{machineCode}
        </if>
        <if test=" null != typeCode and '' != typeCode">
           and thrw.type_code = #{typeCode}
        </if>
        <if test=" null != beginDate and '' != beginDate">
            and thrw.last_time <![CDATA[>=]]>str_to_date(#{beginDate},'%Y-%m-%d')
        </if>
        <if test=" null != endDate and '' != endDate">
            and thrw.last_time <![CDATA[<=]]> str_to_date(#{endDate},'%Y-%m-%d')
        </if>



    </select>

    <insert id="batchInsertScanCount" parameterType="java.util.ArrayList" >
        insert into t_hl_scan_count
        (approval,machine_name,brand_name,factory_name,type,total_scan,reject,shift_id,date,remark)
        values
        <foreach collection="list" separator="," open="(" close=")" index="index">
        #{index.approval},#{index.machineName},#{index.brandName},#{index.factoryName},
        #{index.type},#{index.totalScan},#{index.reject},#{index.period},#{index.date},
        #{index.remark}
        </foreach>
    </insert>

    <insert id="batchInsertRejectCount" parameterType="java.util.ArrayList">
        insert into t_hl_reject_count
        (count_remark,machine_code,shift_id,date,reject_type,type,remark,factory_name)
        values
        <foreach collection="list" separator="," index="index">
            (#{index.countRemark},#{index.machineCode},#{index.period},#{index.date},#{index.rejectType},
            #{index.type},#{index.factoryName})
        </foreach>
    </insert>

</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlxd.microcloud.dao.InitMapper">


    <resultMap id="baseInitMap" type="com.hlxd.microcloud.vo.InitMachineTimeVo">
        <result column="machine_code" property="machineCode" />
        <result column="class_name" property="className" />
        <result column="shift_id" property="shiftId" />
        <result column="begin_date" property="beginDate" />
        <result column="end_date" property="endDate" />
    </resultMap>
    <resultMap id="tableInitMap" type="com.hlxd.microcloud.vo.InitTableSchedule">
        <result column="machine_code" property="machineCode" />
        <result column="begin_date" property="beginDate" />
        <result column="end_date" property="endDate" />
        <result column="date_string" property="dateString" />
    </resultMap>
    <resultMap id="tableSplitMap" type="com.hlxd.microcloud.vo.TableSplit">
        <result column="table_name" property="tableName" />
        <result column="produce_date" property="produceDate" />
        <result column="produce_machine_code" property="machineCode" />
        <result column="schedule_begin_date" property="beginDate" />
        <result column="schedule_end_date" property="endDate" />
    </resultMap>
    <resultMap id="ProCodeMap" type="com.hlxd.microcloud.vo.ProCode">
        <result column="qrCode" property="qrCode" />
        <result column="parent_code" property="parentCode" />
        <result column="relation_date" property="relationDate" />
        <result column="brand_name" property="productName" />
        <result column="machine_code" property="machineCode" />
        <result column="machine_name" property="machineName" />
        <result column="package_type" property="packageType" />
        <result column="batch_no" property="batchNo" />
        <result column="remarks" property="remark" />
        <result column="work_batch_no" property="workBatchNo" />
        <result column="shift_id" property="shiftId" />
    </resultMap>

    <resultMap id="QrCodeDetailsMap" type="com.hlxd.microcloud.vo.ProCode">
        <result column="qr_code" property="qrCode" />
        <result column="parent_code" property="parentCode" />
        <result column="relation_date" property="relationDate" />
        <result column="brand_name" property="productName" />
        <result column="brand_id" property="brandId" />
        <result column="machine_code" property="machineCode" />
        <result column="machine_name" property="machineName" />
        <result column="package_type" property="packageType" />
        <result column="batch_no" property="batchNo" />
        <result column="remarks" property="remark" />
        <result column="work_batch_no" property="workBatchNo" />
        <result column="shift_id" property="shiftId" />
        <collection property="proCodes" ofType="com.hlxd.microcloud.vo.ProCode">
            <result column="c_qrCode" property="qrCode" />
            <result column="c_parent_code" property="parentCode" />
            <result column="c_relation_date" property="relationDate" />
            <result column="c_brand_name" property="productName" />
            <result column="c_brand_name" property="brandId" />
            <result column="c_machine_code" property="machineCode" />
            <result column="c_machine_name" property="machineName" />
            <result column="c_package_type" property="packageType" />
            <result column="c_batch_no" property="batchNo" />
            <result column="c_remarks" property="remark" />
            <result column="c_work_batch_no" property="workBatchNo" />
            <result column="c_shift_id" property="shiftId" />
            <collection property="proCodes" ofType="com.hlxd.microcloud.vo.ProCode">
                <result column="cc_c_qrCode" property="qrCode" />
                <result column="cc_c_parent_code" property="parentCode" />
                <result column="cc_c_relation_date" property="relationDate" />
                <result column="cc_c_brand_name" property="productName" />
                <result column="cc_c_brand_name" property="brandId" />
                <result column="cc_c_machine_code" property="machineCode" />
                <result column="cc_c_machine_name" property="machineName" />
                <result column="cc_c_package_type" property="packageType" />
                <result column="cc_c_batch_no" property="batchNo" />
                <result column="cc_c_remarks" property="remark" />
                <result column="cc_c_work_batch_no" property="workBatchNo" />
                <result column="cc_c_shift_id" property="shiftId" />
            </collection>
        </collection>
    </resultMap>


    <select id="getInitMachineTime" resultMap="baseInitMap" >
        select thbm.machine_code,
        thssd.id as shift_id,
        thssd.class_name,
        STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') as begin_date,
        (
        case
        when STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') <![CDATA[>]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')        then DATE_ADD(STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY)
        when STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') <![CDATA[<]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')        then STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')
        end ) as end_date
        from
        t_hl_base_machine thbm
        left join t_hl_system_shift thss on thbm.shift_id = thss.id
        left join t_hl_system_shift_details thssd on thss.id = thssd.shift_id
        where
        (case
        when  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') <![CDATA[>]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')
        then now() <![CDATA[>=]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') and now() <![CDATA[<=]]>  DATE_ADD(STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY)
        when STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') <![CDATA[<]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')
        then now() <![CDATA[>=]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') and now() <![CDATA[<=]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')
        end
        )
        <where>
         <if test="null != machineCode and '' != machineCode">
           and thbm.machine_code = #{machineCode}
         </if>
        </where>
    </select>

    <update id="updateMachineTime" parameterType="com.hlxd.microcloud.vo.InitMachineTimeVo">
        update t_hl_system_current_machine_time
        set begin_date =#{beginDate},end_date=#{endDate},class_name=#{className},shift_id = #{shiftId}
        where machine_code = #{machineCode}

    </update>
    <select id="getInitMachineTimeFromTable" resultMap="baseInitMap">
        select
        *
        from t_hl_system_current_machine_time
    </select>

    <select id="getInitTableScheduleFromTable" resultMap="tableInitMap">
        select * from t_hl_system_table_schedule
    </select>
    <select id="getInitTableSchedule" resultMap="tableInitMap">
        select
        thbm.machine_code,
        min(STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s')) as begin_date,
        max(
        (
        case
        when STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') <![CDATA[>]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')        then DATE_ADD(STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY)
        when STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.begin_date),'%Y-%m-%d %H:%i:%s') <![CDATA[<]]>  STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')        then STR_TO_DATE(concat(DATE_FORMAT(now(),'%Y-%m-%d'),' ',thssd.end_date),'%Y-%m-%d %H:%i:%s')
        end )
        ) as end_date,
        DATE_FORMAT(now(),'%Y%m%d') as date_string
        from
        t_hl_base_machine thbm
        left join
        t_hl_system_shift thss
        on thbm.shift_id = thss.id
        left join t_hl_system_shift_details thssd
        on thssd.shift_id = thss.id
        where thss.status =1
        and thbm.machine_code= #{machineCode}
        group by thbm.machine_code
    </select>
    <update id="updateTableSchedule" parameterType="com.hlxd.microcloud.vo.InitTableSchedule">
        update t_hl_system_table_schedule
        set begin_date = #{beginDate},end_date = #{endDate},date_string=#{dateString}
        where machine_code = #{machineCode}
    </update>
    <insert id="insertTableSchedule" parameterType="com.hlxd.microcloud.vo.InitTableSchedule">
        insert into t_hl_system_table_schedule
        (machine_code,begin_date,end_date,date_string) values (#{machineCode},#{beginDate},#{endDate},#{dateString})

    </insert>

    <insert id="createNewTable" parameterType="java.lang.String" statementType="STATEMENT">
CREATE TABLE ${tableName}  (
  `id` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `qrCode` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `parent_code` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `relation_date` timestamp(0) NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0),
  `brand_id` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `machine_code` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `package_type` bigint(20) NULL DEFAULT NULL,
  `remark` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `batch_no` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `work_batch_no` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `shift_id` bigint(20) NULL DEFAULT NULL,
  `origin_code` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `speed` int(4) NULL DEFAULT NULL,
  `LoadTime` datetime(0) NULL DEFAULT CURRENT_TIMESTAMP(0),
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `index_qr_pr`(`qrCode`, `parent_code`, `machine_code`) USING BTREE COMMENT '码机台',
  INDEX `index_time`(`qrCode`, `parent_code`, `package_type`, `machine_code`, `relation_date`) USING BTREE COMMENT '码时间',
  INDEX `index_special`(`parent_code`, `relation_date`, `package_type`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;
    </insert>

    <select id="checkTableExits" parameterType="java.lang.String" resultType="java.lang.Integer">
SELECT
  count(*)
FROM
  information_schema.tables
	where table_name = #{tableName}
    </select>

    <insert id="createNewUnionTable" parameterType="java.lang.String" statementType="STATEMENT">
        CREATE TABLE ${tableName}  (
  `qr_code` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '包码',
  `package_code` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '条码',
  `item_code` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '件码',
  `machine_code` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '包装机编号',
  `machine_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '包装机名称',
  `package_machine_code` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '装封箱机编码',
  `package_machine_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '装封箱机名称',
  `relation_date` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '包装机关联日期',
  `package_relation_date` timestamp(0) NULL DEFAULT NULL COMMENT '装封箱机关联日期',
  `brand_id` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '牌号',
  `shift_id` int(20) NULL DEFAULT NULL COMMENT '包装机班组ID',
  `package_shift_id` int(20) NULL DEFAULT NULL COMMENT '装封箱机班组ID',
   PRIMARY KEY (`qr_code`, `package_code`, `item_code`, `relation_date`,`package_relation_date`) USING BTREE,
  INDEX `index_query`(`machine_code`, `relation_date`) USING BTREE COMMENT 'countQuery',
  INDEX `code_query`(`qr_code`, `package_code`, `item_code`) USING BTREE COMMENT 'codeQuery'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;
    </insert>


    <select id="getTableScheduleString" parameterType="java.lang.String" resultType="java.lang.String">
        select table_name
        from t_hl_system_table_split
        where produce_machine_code = #{machineCode}
        and schedule_begin_date <![CDATA[<]]>str_to_date(#{currentDate},'%Y-%m-%d %H:%i:%s')   and  str_to_date(#{currentDate},'%Y-%m-%d %H:%i:%s') <![CDATA[<=]]> schedule_end_date
    </select>

    <insert id="insertRecordTableInit" parameterType="com.hlxd.microcloud.vo.InitTable">
        insert into t_hl_system_table_split
        (table_name,produce_date,produce_machine_code,create_date,schedule_begin_date,schedule_end_date)
        values (#{tableName},#{produceDate},#{produceMachineCode},now(),#{scheduleBeginDate},#{scheduleEndDate})
    </insert>

    <select id="getProCode" parameterType="java.util.HashMap" resultMap="ProCodeMap" statementType="STATEMENT">
      select
				thsc.qrCode,
				thsc.parent_code,
				thsc.relation_date,
				thsc.brand_id,
				thbm.machine_code,
				thbm.machine_name,
				thsb.brand_name,
				thsc.package_type,
				thsc.remark,
				thsc.batch_no,
				thsc.work_batch_no,
				thsc.shift_id
				from ${tableName} thsc
				left join t_hl_system_brand thsb
				on thsc.brand_id = thsb.id
				left join t_hl_base_machine thbm
				on thsc.machine_code = thbm.machine_code
        where thsc.qrCode = '${qrCode}'
        order by relation_date desc
        limit 1



    </select>

    <select id="getProCodes" parameterType="java.util.HashMap" resultMap="QrCodeDetailsMap">
        select
        item_code as qr_code,
        package_machine_name as machine_name,
        3 as package_type,
        thsb.brand_name,
        package_code as c_qrCode,
        item_code as c_parent_code,
		machine_name as c_machine_name,
        relation_date as c_relation_date,
        2 as c_package_type,
        thsb.brand_name as c_brand_name,
		qr_code as cc_c_qrCode,
        package_code as cc_c_parent_code,
		machine_name as cc_c_machine_name,
        relation_date as cc_c_relation_date,
        1 as cc_c_package_type,
        thsb.brand_name as cc_c_brand_name
				from ${tableName} thscu
				left join t_hl_system_brand thsb
				on thscu.brand_id = thsb.brand_code
				where thscu.qr_code = '${qrCode}' or thscu.package_code = '${qrCode}' or thscu.item_code = '${qrCode}'
    </select>

    <select id="getTableSplit" parameterType="java.util.HashMap" resultMap="tableSplitMap">
        select
        table_name,
        produce_date,
        produce_machine_code,
        schedule_begin_date,
        schedule_end_date
        from
        t_hl_system_table_split
        where
        produce_machine_code = #{machineCode}
        and
        produce_date in (
        <foreach collection="dates" item="item" separator=",">
            #{item}
        </foreach>
        )

        order by produce_date asc
    </select>
<!--/*thsts.produce_date = date_format(date_add(now(),interval -1  day),'%Y%m%d')*/-->
    <select id="getCurrentTableSplit"  resultMap="tableSplitMap">
        select
        thsts.table_name,
        thsts.produce_date,
        thsts.produce_machine_code,
        thsts.schedule_begin_date,
        thsts.schedule_end_date,
		thbm.group_code as tableType
        from
        t_hl_system_table_split thsts
        left join  t_hl_base_machine thbm
        on thbm.machine_code = thsts.produce_machine_code
        where
        date_add(now(),interval -1  day) <![CDATA[<=]]> thsts.create_date and date_add(now(),interval 0  day) <![CDATA[>=]]> thsts.create_date

    </select>

    <select id="getCountFromUnion" parameterType="java.util.HashMap" resultType="com.hlxd.microcloud.vo.ProductionCount" statementType="STATEMENT">
         select
            count(distinct(qr_code)) as packageCount,
            count(distinct (package_code)) as stripCount,
            count(distinct (item_code)) as itemCount
            from ${tableName}
            where
            machine_code = '${machineCode}'
            <if test="type == 1">
                and relation_date <![CDATA[>=]]> str_to_date('${beginDate}','%Y-%m-%d %H:%i:%s')   and relation_date <![CDATA[<=]]> str_to_date('${endDate}','%Y-%m-%d %H:%i:%s')
            </if>
            <if test="type == 2">
            </if>
            <if test="type == 3">
                and relation_date <![CDATA[>=]]>  str_to_date('${beginDate}','%Y-%m-%d %H:%i:%s')
            </if>
            <if test="type ==4">
                and relation_date <![CDATA[<=]]> str_to_date('${endDate}','%Y-%m-%d %H:%i:%s')
            </if>


    </select>

    <select id="countCode" parameterType="java.util.HashMap" resultType="java.lang.Integer" statementType="STATEMENT">
        select count(*)
        from ${tableName}
        where
        machine_code='${machineCode}'
        and relation_date <![CDATA[>=]]> str_to_date('${beginDate}','%Y-%m-%d %H:%i:%s')
        and relation_date <![CDATA[<=]]> str_to_date('${endDate}','%Y-%m-%d %H:%i:%s')
        <if test="packageType ==1">
            and qrCode = '${qrCode}'
        </if>
        <if test="packageType == 2">

        </if>



    </select>
    <insert id="rejectCount" >
insert into t_hl_reject_count
(machine_code,shift_id,type_code,reject_type_code,reject_date,reject_count,scan_date)
select
a.*
from (
        select
        machine_code,
        shift_id,
        type_code,
		reject_type_code,
		reject_date,
        count(*) as reject_count,
		now() as scan_date
        from
        t_hl_reject_detail
        where reject_date <![CDATA[>=]]>  DATE_ADD(str_to_date(DATE_FORMAT(now(),'%Y-%m-%d'),'%Y-%m-%d'),INTERVAL -1 DAY) and reject_date <![CDATA[<]]> DATE_ADD(str_to_date(DATE_FORMAT(now(),'%Y-%m-%d'),'%Y-%m-%d'),INTERVAL 0 DAY)
        group by machine_code,
        shift_id,
        reject_date,
        reject_type_code,
        type_code
) as a




    </insert>


</mapper>

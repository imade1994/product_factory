<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlxd.microcloud.dao.QualityCheckMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hlxd.microcloud.vo.RandomCheckRecord">
        <id column="id" property="id" />
        <result column="begin_check_date" property="beginCheckDate" />
        <result column="end_check_date" property="endCheckDate" />
        <result column="machine_code" property="machineCode" />
        <result column="check_type_code" property="checkType" />
        <result column="quality_type_code" property="qualityType" />
        <result column="shift_id" property="shiftId" />
        <result column="check_people" property="checkPeople" />
        <result column="qrCode" property="qrCode" />
        <result column="check_status" property="checkStatus" />
        <collection property="randomCheckDetails" ofType="com.hlxd.microcloud.vo.RandomCheckDetails">
            <id column="d_id" property="id" />
            <id column="random_check_id" property="randomCheckId" />
            <id column="d_qrCode" property="qrCode" />
            <id column="d_status" property="status" />
        </collection>
    </resultMap>

    <resultMap id="QrCodeDetailsMap" type="com.hlxd.microcloud.vo.ProCode">
        <result column="qrCode" property="qrCode" />
        <result column="parent_code" property="parentCode" />
        <result column="relation_date" property="relationDate" />
        <result column="brand_name" property="productName" />
        <result column="brand_id" property="brandId" />
        <result column="machine_code" property="machineCode" />
        <result column="package_type" property="packageType" />
        <result column="batch_no" property="batchNo" />
        <result column="remarks" property="remark" />
        <result column="work_batch_no" property="workBatchNo" />
        <result column="shift_id" property="shiftId" />
        <collection property="proCodes" ofType="com.hlxd.microcloud.vo.ProCode">
            <result column="c_qrCode" property="qrCode" />
            <result column="c_parent_code" property="parentCode" />
            <result column="c_relation_date" property="relationDate" />
            <result column="c_brand_name" property="productName" />
            <result column="c_brand_name" property="brandId" />
            <result column="c_machine_code" property="machineCode" />
            <result column="c_package_type" property="packageType" />
            <result column="c_batch_no" property="batchNo" />
            <result column="c_remarks" property="remark" />
            <result column="c_work_batch_no" property="workBatchNo" />
            <result column="c_shift_id" property="shiftId" />
        </collection>
    </resultMap>


    <select id="getRandomCheckList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select thrc.id,
        date_format(thrc.begin_check_date,'%Y-%m-%d %H:%i:%s') as begin_check_date,
        date_format(thrc.end_check_date,'%Y-%m-%d %H:%i:%s') as end_check_date,
        thrc.machine_code,
        thrc.check_type_code,
        thrc.quality_type_code,
        thrc.check_people,
        thrc.shift_id,
        thrc.qr_code,
        thrc.check_status,
        thrcd.id as d_id,
        thrcd.random_check_id,
        thrcd.qr_code as d_qrCode,
        thrcd.random_check_status_code as d_status
        from
        t_hl_random_check thrc
        left join
        t_hl_random_check_detail thrcd
        on thrcd.random_check_id = thrc.id
        where
        1=1
        <if test="null != qualityType and '' != qualityType">
        and quality_type_code =#{qualityType}
        </if>
        <if test="null != checkType and '' != checkType">
        and check_type_code = #{checkType}
        </if>
        <if test="null != brandId and '' != brandId">
        and brand_id =#{brandId}
        </if>
        <if test="null != beginCheckDate and '' != beginCheckDate">
        and begin_check_date <![CDATA[>=]]> str_to_date(#{beginCheckDate},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="null != endCheckDate and '' != endCheckDate">
            and end_check_date <![CDATA[<=]]> str_to_date(#{endCheckDate},'%Y-%m-%d %H:%i:%s')
        </if>
        order by id desc
    </select>



    <select id="getCodeDetail" parameterType="java.util.HashMap"  resultMap="QrCodeDetailsMap">
        select
				thsc.qrCode,
				thsc.parent_code,
				thsc.relation_date,
				thsc.brand_id,
				thsc.machine_code,
				thsb.brand_name,
				thsc.package_type,
				thsc.remark,
				thsc.batch_no,
				thsc.work_batch_no,
				thsc.shift_id,
				thscc.qrCode as c_qrCode,
				thscc.parent_code as c_parent_code,
				thscc.relation_date as c_relation_date,
				thscc.brand_id as c_brand_id,
				thsb.brand_name as c_brand_name,
				thscc.machine_code as c_machine_code,
				thscc.package_type as c_package_type,
				thscc.remark as c_remark,
				thscc.batch_no as c_batch_no,
				thscc.work_batch_no as c_work_batch_no,
				thscc.shift_id as c_shift_id
				from t_hl_system_code thsc
				left join t_hl_system_code thscc
				on thsc.qrCode = thscc.parent_code
				left join t_hl_system_brand thsb
				on thsc.brand_id = thsb.id
        where thsc.qrCode = #{qrCode}
        <if test="null != packageType and '' != packageType ">
            and thsc.package_type = #{packageType}
        </if>
    </select>


    <insert id="insertRandomCheck" parameterType="com.hlxd.microcloud.vo.RandomCheckRecord">
        insert into t_hl_random_check
        (end_check_date,machine_code,check_type_code,quality_type_code,qr_code,check_status,begin_check_date,shift_id,brand_id,check_people)
        values
        (#{vo.endCheckDate},#{vo.machineCode},#{vo.checkType},#{vo.qualityType},#{vo.qrCode},#{vo.checkStatus},#{vo.beginCheckDate}
        ,#{vo.shiftId},#{vo.brandId},#{vo.checkPeople})
    </insert>

    <insert id="insertRandomCheckDetails" parameterType="java.util.ArrayList">
        insert into t_hl_random_check_detail
        (random_check_id,qr_code,random_check_status_code)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.randomCheckId},#{item.qrCode},#{item.status})
        </foreach>
    </insert>

</mapper>
